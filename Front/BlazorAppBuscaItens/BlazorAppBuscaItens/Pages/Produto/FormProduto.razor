@using BlazorStrap
@inject HttpClient Http

<EditForm Model="@Product" OnValidSubmit="@OnValidSubmit">

    <DataAnnotationsValidator />
    <div class="form-horizontal">
        
        <div class="d-flex">
            
            <div class="form-horizontal d-flex flex-column col-sm-5 p-0 pr-2">
                <label>Categorias</label>
                <InputSelect id="category" @bind-Value="Product.CategoryId">
                    @foreach (var category in categories)
                    {
                        <option value="@category.Id">@category.Description</option>
                    }
                </InputSelect>
            </div>

            <div class="form-horizontal d-flex flex-column col-sm-5 p-0">
                <label>Fabricante</label>
                <InputSelect id="manufacturer" @bind-Value="Product.ManufecturerId">
                    @foreach (var manufacturer in manufacturers)
                    {
                        <option value="@manufacturer.Id">@manufacturer.Description</option>
                    }
                </InputSelect>
            </div>
        </div>
        <br />
        
        <label>Descrição</label>
        <div class="form-horizontal">
            <InputText @bind-Value="@Product.Description" class="col-sm-10"></InputText>
            <ValidationMessage For="@(() => Product.Description)" />
        </div>
        <br />

        <div class="d-flex">
            <div class="form-horizontal d-flex flex-column col-sm-6 p-0 pr-2">
                <label>Modelo</label>
                <InputText @bind-Value="@Product.Model"></InputText>
                <ValidationMessage For="@(() => Product.Model)" />
            </div>
            
            
            <div class="form-horizontal d-flex flex-column col-sm-4 p-0">
                <label>Ano de Fabricação</label>
                <InputNumber @bind-Value="@Product.YearOfManufacture" ></InputNumber>
                <ValidationMessage For="@(() => Product.YearOfManufacture)" />
            </div>
        </div>

        @*<label>Fabricante</label>
        <div class="form-horizontal">
            <InputSelect id="manufacturer" @bind-Value="Product.ManufecturerId" class="col-sm-10">
                @foreach (var manufacturer in manufacturers)
                {
                    <option value="@manufacturer.Id">@manufacturer.Description</option>
                }
            </InputSelect>
        </div>*@
        <br />


        <label>Imagem</label>
        <div class="form-horizontal">
            <InputText @bind-Value="@Product.Image" class="col-sm-10"></InputText>
            <ValidationMessage For="@(() => Product.Image)" />
        </div>
        <br />

        <label>Folder</label>
        <div class="form-horizontal">
            <InputText @bind-Value="@Product.Folder" class="col-sm-10"></InputText>
            <ValidationMessage For="@(() => Product.Folder)" />
        </div>

        <br />

        <div class="d-flex">

            <div class="form-horizontal d-flex flex-column col-sm-5 p-0 pr-2">
                <label>Caracteristica</label>
                <select name="characteristic" id="characteristic">
                    @foreach (var characteristic in characteristics)
                    {
                        <option value="@characteristic.Id">@characteristic.Description</option>
                    }
                </select>
            </div>
            
            <div class="row mb-2">
                <div class="form-horizontal d-flex flex-column col-sm-5 p-0">
                    <label>Caracteristica</label>
                    <select name="characteristic" id="characteristic">
                        @foreach (var characteristic in characteristics)
                        {
                            <option value="@characteristic.Id">@characteristic.Description</option>
                        }
                    </select>
                </div>
            </div>
            
        </div>

        <br />

    </div>
</EditForm>

@code {
    [Parameter] public Product Product { get; set; }
    [Parameter] public string ButtonText { get; set; }
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    string URL = @"https://localhost:44324/v1/comparaItens/";

    List<Manufacturer> manufacturers = new List<Manufacturer>();
    List<Category> categories = new List<Category>();
    List<Characteristic> characteristics = new List<Characteristic>();
    List<CharacteristicKey> caracteristicaItem = new List<CharacteristicKey>();



    protected override async Task OnInitializedAsync()
    {
        await LoadManufactures();
    }

    async Task LoadManufactures()
    {
        manufacturers = await Http.GetFromJsonAsync<List<Manufacturer>>(URL + "manufacturer/findAll");
        categories = await Http.GetFromJsonAsync<List<Category>>(URL + "category/findAll");
        characteristics = await Http.GetFromJsonAsync<List<Characteristic>>(URL + "characteristic/findAll");
        caracteristicaItem = await Http.GetFromJsonAsync<List<CharacteristicKey>>(URL + "characteristicKey/findAll");

    }

}