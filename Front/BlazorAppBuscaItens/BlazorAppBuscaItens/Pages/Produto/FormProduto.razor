@using BlazorStrap
@using System.IO
@inject HttpClient Http

<EditForm Model="@Product" OnValidSubmit="@OnValidSubmit">

    <DataAnnotationsValidator />
    <div class="form-horizontal">

        <div class="d-flex">

            <div class="form-horizontal d-flex flex-column col-sm-5 p-0 pr-2">
                <label>Categorias</label>
                <InputSelect id="category" @bind-Value="Product.CategoryId">
                    @foreach (var category in categories)
                    {
                        <option value="@category.Id">@category.Description</option>
                    }
                </InputSelect>
            </div>
            


            <div class="form-horizontal d-flex flex-column col-sm-5 p-0">
                <label>Fabricante</label>
                <InputSelect id="manufacturer" @bind-Value="Product.ManufecturerId">
                    @foreach (var manufacturer in manufacturers)
                    {
                        <option value="@manufacturer.Id">@manufacturer.Description</option>
                    }
                </InputSelect>
            </div>
        </div>
        <br />

        <label>Descrição</label>
        <div class="form-horizontal">
            <InputText @bind-Value="@Product.Description" class="col-sm-10"></InputText>
            <ValidationMessage For="@(() => Product.Description)" />
        </div>
        <br />

        <div class="d-flex">
            <div class="form-horizontal d-flex flex-column col-sm-6 p-0 pr-2">
                <label>Modelo</label>
                <InputText @bind-Value="@Product.Model"></InputText>
                <ValidationMessage For="@(() => Product.Model)" />
            </div>


            <div class="form-horizontal d-flex flex-column col-sm-4 p-0">
                <label>Ano de Fabricação</label>
                <InputNumber @bind-Value="@Product.YearOfManufacture"></InputNumber>
                <ValidationMessage For="@(() => Product.YearOfManufacture)" />
            </div>
        </div>
        <br />


        <label>Imagem</label>
        <div class="form-horizontal">
            <InputText @bind-Value="@Product.Image" class="col-sm-10"></InputText>
            <ValidationMessage For="@(() => Product.Image)" />
        </div>
        <br />

        <label>Folder</label>
        <div class="form-horizontal">
            <InputText @bind-Value="@Product.Folder" class="col-sm-10"></InputText>
            <ValidationMessage For="@(() => Product.Folder)" />
        </div>

        <br />

        <div class="d-flex">

            <div class="form-horizontal d-flex flex-column col-sm-3 p-0 pr-2">
                <label>Caracteristica</label>
                <InputSelect id="characteristic" @bind-Value="@characteristicId">
                    @foreach (var characteristic in characteristics)
                    {
                        <option value="@characteristic.Id">@characteristic.Description</option>
                    }
                </InputSelect>
            </div>

            <div class="form-horizontal d-flex flex-column col-sm-3 p-0">
                <label>Caracteristica Item</label>
                <InputSelect id="caracteristicaItemGroup"  @bind-Value="@key">
                    @foreach (var characteristicItem in caracteristicaItemGroup)
                    {
                        <option value="@characteristicItem">@characteristicItem</option>
                    }
                </InputSelect>
            </div>

            <div class="form-horizontal d-flex flex-column col-sm-3 p-0">
                <label>Caracteristica Item Descrição</label>

                <InputSelect id="caracteristicaItemGroupId"  @bind-Value="@caracteristicaItemGroupId">
                    @foreach (var caracteristicaItemGroupDescription in caracteristicaItemGroupDescriptions)
                    {
                        <option value="@caracteristicaItemGroupDescription.Id">@caracteristicaItemGroupDescription.Description</option>
                    }
                </InputSelect>
            </div>
            
            @*<div class="form-horizontal d-flex flex-column col-sm-3 p-0">
                <label>Caracteristica Item</label>
                <select name="characteristicItem" id="characteristicItem">
                    @foreach (var characteristicItem in caracteristicaItemGroup)
                    {
                        <option value="@characteristicItem">@characteristicItem</option>
                    }
                </select>
            </div>*@

            @*<div class="row mb-2">
                    <div class="form-horizontal d-flex flex-column col-sm-3 p-0">
                        <label>Caracteristica Item Descrição</label>
                        <select name="characteristicItemDescricao" id="characteristicItemDescricao">
                            @foreach (var characteristicItem in caracteristicaItem)
                            {
                                <option value="@characteristicItem.Id">@characteristicItem.Description</option>
                            }
                        </select>
                    </div>
                </div>*@
            
            
            @*<label>Fabricante</label>
            <div class="form-horizontal">
                <InputSelect id="manufacturer" @bind-Value="Product.ManufecturerId" class="col-sm-10">
                    @foreach (var manufacturer in manufacturers)
                    {
                        <option value="@manufacturer.Id">@manufacturer.Description</option>
                    }
                </InputSelect>
            </div>*@

        </div>

        <br />

    </div>
</EditForm>

@code {
    [Parameter] public Product Product { get; set; }
    [Parameter] public string ButtonText { get; set; }
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    string URL = @"https://localhost:44324/v1/comparaItens/";
    string key;
    int characteristicId;
    int caracteristicaItemGroupId;


    List<Manufacturer> manufacturers = new List<Manufacturer>();
    List<Category> categories = new List<Category>();
    List<Characteristic> characteristics = new List<Characteristic>();
    List<CharacteristicKey> caracteristicaItem = new List<CharacteristicKey>();
    List<string> caracteristicaItemGroup = new List<string>();
    List<CharacteristicKey> caracteristicaItemGroupDescriptions = new List<CharacteristicKey>();



    protected override async Task OnInitializedAsync()
    {
        await LoadManufactures();
    }

    async Task LoadManufactures()
    {
        manufacturers = await Http.GetFromJsonAsync<List<Manufacturer>>(URL + "manufacturer/findAll");
        categories = await Http.GetFromJsonAsync<List<Category>>(URL + "category/findAll");
        characteristics = await Http.GetFromJsonAsync<List<Characteristic>>(URL + "characteristic/findAll");
        caracteristicaItem = await Http.GetFromJsonAsync<List<CharacteristicKey>>(URL + "characteristicKey/findAll");

        caracteristicaItemGroup = (from ci in caracteristicaItem select ci.Key).Distinct().ToList();
        
        caracteristicaItemGroupDescriptions = caracteristicaItem.Where(x => x.Key == key).ToList();
    }

}